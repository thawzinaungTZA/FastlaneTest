version: 2
jobs:
  build:
      working_directory: ~/code
      docker:
        - image: circleci/android:api-25-alpha
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
        - checkout
        - restore_cache:
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
  #      - run:
  #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
  #         command: sudo chmod +x ./gradlew
        - run:
            name: Download Dependencies
            command: ./gradlew androidDependencies
        - save_cache:
            paths:
            - ~/.gradle
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
  deploy_test:
        working_directory: ~/code
        docker:
          - image: circleci/android:api-25-alpha
        environment:
          JVM_OPTS: -Xmx3200m
        steps:
          - checkout
          - restore_cache:
              key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    #      - run:
    #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
    #         command: sudo chmod +x ./gradlew
          - run:
              name: Download Dependencies
              command: ./gradlew androidDependencies
          - save_cache:
              paths:
              - ~/.gradle
              key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
          - run:
              name: Run assembleDebug
              command: |
                  ./gradlew assembleDebug
                  curl -F "file=@app/build/outputs/apk/debug/app-debug.apk" -F "token=${DEPLOYGATE_API_KEY}" -F "message=App for ${CIRCLE_BRANCH} (# ${CIRCLE_SHA1})" https://deploygate.com/api/users/${DEPLOYGATE_USERNAME}/apps
  deploy_prod:
          working_directory: ~/code
          docker:
            - image: circleci/android:api-25-alpha
          environment:
            JVM_OPTS: -Xmx3200m
          steps:
            - checkout
            - restore_cache:
                key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      #      - run:
      #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
      #         command: sudo chmod +x ./gradlew
            - run:
                name: Download Dependencies
                command: ./gradlew androidDependencies
            - save_cache:
                paths:
                - ~/.gradle
                key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - run:
                name: Run assembleRelease
                command: |
                    ./gradlew assembleRelease
                    curl -F "file=@app/build/outputs/apk/release/app-release-unsigned.apk" -F "token=${DEPLOYGATE_API_KEY}" -F "message=App for ${CIRCLE_BRANCH} (# ${CIRCLE_SHA1})" https://deploygate.com/api/users/${DEPLOYGATE_USERNAME}/apps
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          name: Run Tests
#          command: ./gradlew lint test
#      - store_artifacts:
#          path: app/build/reports
#          destination: reports
#      - store_test_results:
#          path: app/build/test-results
workflows:
  version: 2
  dev_stage_prod:
      jobs:
          - deploy_test:
              filters:
                  branches:
                      only: develop
          - deploy_prod:
              filters:
                  branches:
                      only: master
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples