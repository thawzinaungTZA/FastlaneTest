version: 2
jobs:
  build:
      working_directory: ~/code
      docker:
        - image: circleci/android:api-25-alpha
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
        - checkout
        - restore_cache:
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
  #      - run:
  #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
  #         command: sudo chmod +x ./gradlew
        - run:
            name: Download Dependencies
            command: ./gradlew androidDependencies
        - save_cache:
            paths:
            - ~/.gradle
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
  deploy_test:
        working_directory: ~/code
        docker:
          - image: circleci/android:api-25-alpha
        environment:
          JVM_OPTS: -Xmx3200m
          FASTLANE_LANE: alpha
        steps:
          - checkout
          - restore_cache:
              key: 1-gems-{{ checksum "Gemfile.lock" }}
          - run: bundle install --path vendor/bundle
          - save_cache:
              key: 1-gems-{{ checksum "Gemfile.lock" }}
              paths:
                - vendor/bundle
          - run:
              name: fastlane
              command: bundle exec fastlane $FASTLANE_LANE
  deploy_prod:
        working_directory: ~/code
        docker:
          - image: circleci/android:api-25-alpha
        environment:
          JVM_OPTS: -Xmx3200m
          FASTLANE_LANE: alpha
        steps:
          - checkout
          - restore_cache:
              key: 1-gems-{{ checksum "Gemfile.lock" }}
          - run: bundle install --path vendor/bundle
          - save_cache:
              key: 1-gems-{{ checksum "Gemfile.lock" }}
              paths:
                - vendor/bundle
          - run:
              name: fastlane
              command: bundle exec fastlane $FASTLANE_LANE
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          name: Run Tests
#          command: ./gradlew lint test
#      - store_artifacts:
#          path: app/build/reports
#          destination: reports
#      - store_test_results:
#          path: app/build/test-results
workflows:
  version: 2
  dev_stage_prod:
      jobs:
          - deploy_test:
              filters:
                  branches:
                      only: develop
          - deploy_prod:
              filters:
                  branches:
                      only: master
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples