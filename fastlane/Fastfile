# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  before_all do
      @gradle_file = "../app/build.gradle"
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Deploy a new version to deploygate for stage"
  lane :alpha do
    gradle(task: "assemble", flavor: "staging", build_type: "Debug")
    branch_name = git_branch
    git_commit_hash = last_git_commit[:commit_hash]
    build_number = lane_context[SharedValues::BUILD_NUMBER]
    deploygate(
      api_token: ENV["DEPLOYGATE_API_KEY"],
      user: ENV["DEPLOYGATE_USERNAME"],
      apk: lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH],
      message: "App for stage (#{git_commit_hash}) [##{build_number}]",
    )
  end

  desc "Deploy a new version to deploygate for production"
  lane :beta do
    gradle(task: "clean")
    gradle(
        task: "assemble",
        flavor: "production",
        build_type: "Release",
        properties: {
           "android.injected.signing.store.file" => ENV["KEY_STORE_PATH"],
           "android.injected.signing.store.password" => ENV["KEY_STORE_PASSWORD"],
           "android.injected.signing.key.alias" => ENV["KEY_STORE_KEY_ALIAS"],
           "android.injected.signing.key.password" => ENV["KEY_STORE_KEY_PASSWORD"],
         }
    )
    branch_name = git_branch
    git_commit_hash = last_git_commit[:commit_hash]
    build_number = lane_context[SharedValues::BUILD_NUMBER]
    deploygate(
      api_token: ENV["DEPLOYGATE_API_KEY"],
      user: ENV["DEPLOYGATE_USERNAME"],
      apk: lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH],
      message: "App for production (#{git_commit_hash}) [##{build_number}]",
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
